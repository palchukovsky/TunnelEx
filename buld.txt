=========================

     Сборка TunnelEx     

=========================



1. Среда.
=========

1.1. Требование к ПО
--------------------
    * ОС Microsoft Windows 2000 или выше;
    * Git;
    * Microsoft Visual С++ 2010 SP1;
    * WiX 3.0.2925.0 (http://wix.sourceforge.net);
    * RAR 3.42 (http://rarlab.com/rar_archiver.htm);
    * doxygen 1.6.2 (http://www.doxygen.org);
    * Graphviz 2.26 (http://www.graphviz.org);
    * 7-Zip 4.65 (http://7-zip.org);
    * Perl (ActivePerl 5.10.1.1006, http://www.activestate.com/activeperl/);
    * NASM 2.06.01 (http://www.nasm.us, минимальная установка);
    * Patch for Windows 2.5.9
      (http://gnuwin32.sourceforge.net/packages/diffutils.htm, готовая к запуску
      сборка: http://tunnelex.net/download/gnuutils.7z);


1.2. Требование к настройке
---------------------------
Для того, чтобы сборочная система могла воспользоваться предоставленными
инструментами в переменной окружения PATH  (либо в общей, либо в среде IDE),
должны быть указаны следующие пути:
    * к исполнительным файлам RAR;
    * к исполнительным файлам doxygen;
    * к исполнительным файлам WiX;
    * к исполнительным файлам 7-Zip;
    * к исполнительным файлам DiffUtils for Windows;

1.3. Требования к сторонним библиотекам и компонентам
-----------------------------------------------------
Для того, чтобы сборочная система смогла найти архивы со сторонними
библиотеками, все файлы должны быть помещены вручную, перед сборкой, в
каталог "externals", в том виде, в котором они были получены с сайта
производителя (если в перечне ниже не оговорено другое). Для сборки
проекта требуются следующие сторонние библиотеки:
    * ACE 5.8.0 (http://download.dre.vanderbilt.edu/) - архив 
      "sources only"-дистрибутива должен быть запакован с помощью TAR+BZ2
      и иметь имя ACE-src-5.8.0.tar.bz2;
    * Boost 1.46.1 (http://boost.org, http://www.boostpro.com/download), все
      компоненты (static-библиотеки, для многопоточной runtime-библиотеки)
      - файлы заголовков (ссылки на них) должны быть расположены в директории
      IDE include, файлы библиотек (ссылки на них) в  директории lib (примеры:
      ...\VC\include\boost\1_46_1\ и ...VC\lib\boost\1_46_1\);
    * Libxml2 2.7.2 (http://xmlsoft.org) - архив дистрибутива должен быть
      запакован с помощью TAR+ZIP и иметь имя libxml2-sources-2.7.2.tar.gz;
    * wxWidgets 2.8.10 (http://wxwidgets.org) - архив дистрибутива должен быть
      запакован с помощью TAR+BZ2 и иметь имя wxWidgets-2.8.10.tar.bz2;
    * OpenSSL 1.0.0d (http://openssl.org) - архив дистрибутива должен быть
      запакован с помощью TAR+ZIP и иметь имя openssl-1.0.0d.tar.gz;
    * MiniUPnP client (http://miniupnp.free.fr) - дистрибутив должен состоять
      из двух частей: TAR+ZIP архива miniupnpc-1.4.20100418.tar.gz с исходными
      кодами и ZIP архива upnpc-exe-win32-20100418.zip с бинарными файлам;



2. Получение исходных файлов
============================

git clone git@palchukovsky.com:TunnelEx



3. Сборка
=========

3.1. Подготовка сторонних библиотек
-----------------------------------
Перед сборкой необходимо поместить в каталог "externals" архивы необходимых
сторонних библиотек.

3.2. Автоматическая сборка дистрибутива
---------------------------------------
В командной среде IDE запустить командный файл "build.cmd" c единственныс
ключом "full" для сборки всех компонент во всех конфигурациях.

3.3. Ручная сборка сторонних библиотек
--------------------------------------
Для того, чтобы собрать debug и release-версии сторонних библиотек, нужно в
командной среде IDE запустить командный файл "build.cmd" c параметрами:
    * "build=ws" для сборки всех библиотек (также можно выбрать одну библиотеку,
      например "build=boost");


3.4. Ручная сборка дистрибутива
-------------------------------
Перед сборкой дистрибутива необходимо выполнить сборку сторонних библиотек.
Сборка дистрибутива выполняется сборкой проекта "Setup". Все остальные
необходимые для этого модули собираются по дереву зависимостей.

3.5. Результат сборки
---------------------
Все файлы, полученные в процессе сборки, помещаются в директорию "output".
Эта директория делится на следующие поддиректории, каждая из которых имеет
своё назначение:
    * api - API продукта;
    * bin - бинарные файлы: исполняемые модули, DLL, PDB-файлы, графические
      файлы и т.д. (по сути, эта директория соответствует директории продукта
      после установки дистрибутива);
    * bin/modules - бинарные файлы модулей продукта;
    * bin/tools - бинарные файлы инструментов сторонних библиотек;
    * int - временные и промежуточные файлы, используемые в процессе сборки;
      разделена поддиректориями с именем конфигурации сборки, которые, в свою
      очередь, разбиты на поддиректории с именами модулей, проектов и сторонних
      библиотек;
    * lib - статические библиотеки и библиотеки импорта для DLL;
    * setup - дистрибутивы продукта, полученные в процессе сборки;



4. Тесты
========

4.1. Сборка тестов
------------------
Перед сборкой дистрибутива необходимо выполнить сборку сторонних библиотек.
Сборка дистрибутива выполняется сборкой проекта "Test". Все остальные
необходимые для этого модули собираются по дереву зависимостей.

4.2. Запуск тестов
------------------
Для запуска тестирования необходимо запустить на выполнение проект "Test",
либо исполняемый файл "text.exe". Также запуск тестирования производится
автоматически после сборки проекта "Test".
